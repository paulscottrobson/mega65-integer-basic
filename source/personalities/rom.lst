
; 64tass Turbo Assembler Macro V1.54.1900 listing file
; 64tass --m4510 -D TARGET=1 -b -L rom.lst -o rom.bin ptest.asm
; Mon Jul 22 20:24:39 2019

;Offset	;Hex		;Monitor	;Source

;******  Command line definitions

=1					TARGET=1

;******  Processing input file: ptest.asm


;******  Processing file: personality_mega65.asm

=40					EXTWidth = 40 								; screen width
=25					EXTHeight = 25 								; screen height
=4					EXTZPWork = 4								; Zero Page work for EXT
=$10					EXTZeroPage = $10 							; Zero Page allocated from here
=$2000					EXTNonZeroPage = $2000 						; Non-Zero page allocated from here
=$4000					EXTEndOfMemory = $4000 						; Memory ends.
=$1000					EXTScreen = $1000							; 2k screen RAM here
=$800					EXTCharSet = $800							; 2k character set (0-7F) here
>0000	00 00					.word 	0 								; forces it to be a 128k ROM (at least)
>fffa	00 e0					.word 	EXTDummyInterrupt
>fffc	01 e0					.word 	EXTStartPersonalise
>fffe	00 e0					.word 	EXTDummyInterrupt
.a000					EXTCBMFont:
>a000	3c 66 6e 6e 60 62 3c 00			.binary "c64-chargen.rom"
>a008	18 3c 66 7e 66 66 66 00 7c 66 66 7c 66 66 7c 00
>a018	3c 66 60 60 60 66 3c 00 78 6c 66 66 66 6c 78 00
>a028	7e 60 60 78 60 60 7e 00 7e 60 60 78 60 60 60 00
>a038	3c 66 60 6e 66 66 3c 00 66 66 66 7e 66 66 66 00
>a048	3c 18 18 18 18 18 3c 00 1e 0c 0c 0c 0c 6c 38 00
>a058	66 6c 78 70 78 6c 66 00 60 60 60 60 60 60 7e 00
>a068	63 77 7f 6b 63 63 63 00 66 76 7e 7e 6e 66 66 00
>a078	3c 66 66 66 66 66 3c 00 7c 66 66 7c 60 60 60 00
>a088	3c 66 66 66 66 3c 0e 00 7c 66 66 7c 78 6c 66 00
>a098	3c 66 60 3c 06 66 3c 00 7e 18 18 18 18 18 18 00
>a0a8	66 66 66 66 66 66 3c 00 66 66 66 66 66 3c 18 00
>a0b8	63 63 63 6b 7f 77 63 00 66 66 3c 18 3c 66 66 00
>a0c8	66 66 66 3c 18 18 18 00 7e 06 0c 18 30 60 7e 00
>a0d8	3c 30 30 30 30 30 3c 00 0c 12 30 7c 30 62 fc 00
>a0e8	3c 0c 0c 0c 0c 0c 3c 00 00 18 3c 7e 18 18 18 18
>a0f8	00 10 30 7f 7f 30 10 00 00 00 00 00 00 00 00 00
>a108	18 18 18 18 00 00 18 00 66 66 66 00 00 00 00 00
>a118	66 66 ff 66 ff 66 66 00 18 3e 60 3c 06 7c 18 00
>a128	62 66 0c 18 30 66 46 00 3c 66 3c 38 67 66 3f 00
>a138	06 0c 18 00 00 00 00 00 0c 18 30 30 30 18 0c 00
>a148	30 18 0c 0c 0c 18 30 00 00 66 3c ff 3c 66 00 00
>a158	00 18 18 7e 18 18 00 00 00 00 00 00 00 18 18 30
>a168	00 00 00 7e 00 00 00 00 00 00 00 00 00 18 18 00
>a178	00 03 06 0c 18 30 60 00 3c 66 6e 76 66 66 3c 00
>a188	18 18 38 18 18 18 7e 00 3c 66 06 0c 30 60 7e 00
>a198	3c 66 06 1c 06 66 3c 00 06 0e 1e 66 7f 06 06 00
>a1a8	7e 60 7c 06 06 66 3c 00 3c 66 60 7c 66 66 3c 00
>a1b8	7e 66 0c 18 18 18 18 00 3c 66 66 3c 66 66 3c 00
>a1c8	3c 66 66 3e 06 66 3c 00 00 00 18 00 00 18 00 00
>a1d8	00 00 18 00 00 18 18 30 0e 18 30 60 30 18 0e 00
>a1e8	00 00 7e 00 7e 00 00 00 70 18 0c 06 0c 18 70 00
>a1f8	3c 66 06 0c 18 00 18 00 00 00 00 ff ff 00 00 00
>a208	08 1c 3e 7f 7f 1c 3e 00 18 18 18 18 18 18 18 18
>a218	00 00 00 ff ff 00 00 00 00 00 ff ff 00 00 00 00
>a228	00 ff ff 00 00 00 00 00 00 00 00 00 ff ff 00 00
>a238	30 30 30 30 30 30 30 30 0c 0c 0c 0c 0c 0c 0c 0c
>a248	00 00 00 e0 f0 38 18 18 18 18 1c 0f 07 00 00 00
>a258	18 18 38 f0 e0 00 00 00 c0 c0 c0 c0 c0 c0 ff ff
>a268	c0 e0 70 38 1c 0e 07 03 03 07 0e 1c 38 70 e0 c0
>a278	ff ff c0 c0 c0 c0 c0 c0 ff ff 03 03 03 03 03 03
>a288	00 3c 7e 7e 7e 7e 3c 00 00 00 00 00 00 ff ff 00
>a298	36 7f 7f 7f 3e 1c 08 00 60 60 60 60 60 60 60 60
>a2a8	00 00 00 07 0f 1c 18 18 c3 e7 7e 3c 3c 7e e7 c3
>a2b8	00 3c 7e 66 66 7e 3c 00 18 18 66 66 18 18 3c 00
>a2c8	06 06 06 06 06 06 06 06 08 1c 3e 7f 3e 1c 08 00
>a2d8	18 18 18 ff ff 18 18 18 c0 c0 30 30 c0 c0 30 30
>a2e8	18 18 18 18 18 18 18 18 00 00 03 3e 76 36 36 00
>a2f8	ff 7f 3f 1f 0f 07 03 01 00 00 00 00 00 00 00 00
>a308	f0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00 ff ff ff ff
>a318	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff
>a328	c0 c0 c0 c0 c0 c0 c0 c0 cc cc 33 33 cc cc 33 33
>a338	03 03 03 03 03 03 03 03 00 00 00 00 cc cc 33 33
>a348	ff fe fc f8 f0 e0 c0 80 03 03 03 03 03 03 03 03
>a358	18 18 18 1f 1f 18 18 18 00 00 00 00 0f 0f 0f 0f
>a368	18 18 18 1f 1f 00 00 00 00 00 00 f8 f8 18 18 18
>a378	00 00 00 00 00 00 ff ff 00 00 00 1f 1f 18 18 18
>a388	18 18 18 ff ff 00 00 00 00 00 00 ff ff 18 18 18
>a398	18 18 18 f8 f8 18 18 18 c0 c0 c0 c0 c0 c0 c0 c0
>a3a8	e0 e0 e0 e0 e0 e0 e0 e0 07 07 07 07 07 07 07 07
>a3b8	ff ff 00 00 00 00 00 00 ff ff ff 00 00 00 00 00
>a3c8	00 00 00 00 00 ff ff ff 03 03 03 03 03 03 ff ff
>a3d8	00 00 00 00 f0 f0 f0 f0 0f 0f 0f 0f 00 00 00 00
>a3e8	18 18 18 f8 f8 00 00 00 f0 f0 f0 f0 00 00 00 00
>a3f8	f0 f0 f0 f0 0f 0f 0f 0f c3 99 91 91 9f 99 c3 ff
>a408	e7 c3 99 81 99 99 99 ff 83 99 99 83 99 99 83 ff
>a418	c3 99 9f 9f 9f 99 c3 ff 87 93 99 99 99 93 87 ff
>a428	81 9f 9f 87 9f 9f 81 ff 81 9f 9f 87 9f 9f 9f ff
>a438	c3 99 9f 91 99 99 c3 ff 99 99 99 81 99 99 99 ff
>a448	c3 e7 e7 e7 e7 e7 c3 ff e1 f3 f3 f3 f3 93 c7 ff
>a458	99 93 87 8f 87 93 99 ff 9f 9f 9f 9f 9f 9f 81 ff
>a468	9c 88 80 94 9c 9c 9c ff 99 89 81 81 91 99 99 ff
>a478	c3 99 99 99 99 99 c3 ff 83 99 99 83 9f 9f 9f ff
>a488	c3 99 99 99 99 c3 f1 ff 83 99 99 83 87 93 99 ff
>a498	c3 99 9f c3 f9 99 c3 ff 81 e7 e7 e7 e7 e7 e7 ff
>a4a8	99 99 99 99 99 99 c3 ff 99 99 99 99 99 c3 e7 ff
>a4b8	9c 9c 9c 94 80 88 9c ff 99 99 c3 e7 c3 99 99 ff
>a4c8	99 99 99 c3 e7 e7 e7 ff 81 f9 f3 e7 cf 9f 81 ff
>a4d8	c3 cf cf cf cf cf c3 ff f3 ed cf 83 cf 9d 03 ff
>a4e8	c3 f3 f3 f3 f3 f3 c3 ff ff e7 c3 81 e7 e7 e7 e7
>a4f8	ff ef cf 80 80 cf ef ff ff ff ff ff ff ff ff ff
>a508	e7 e7 e7 e7 ff ff e7 ff 99 99 99 ff ff ff ff ff
>a518	99 99 00 99 00 99 99 ff e7 c1 9f c3 f9 83 e7 ff
>a528	9d 99 f3 e7 cf 99 b9 ff c3 99 c3 c7 98 99 c0 ff
>a538	f9 f3 e7 ff ff ff ff ff f3 e7 cf cf cf e7 f3 ff
>a548	cf e7 f3 f3 f3 e7 cf ff ff 99 c3 00 c3 99 ff ff
>a558	ff e7 e7 81 e7 e7 ff ff ff ff ff ff ff e7 e7 cf
>a568	ff ff ff 81 ff ff ff ff ff ff ff ff ff e7 e7 ff
>a578	ff fc f9 f3 e7 cf 9f ff c3 99 91 89 99 99 c3 ff
>a588	e7 e7 c7 e7 e7 e7 81 ff c3 99 f9 f3 cf 9f 81 ff
>a598	c3 99 f9 e3 f9 99 c3 ff f9 f1 e1 99 80 f9 f9 ff
>a5a8	81 9f 83 f9 f9 99 c3 ff c3 99 9f 83 99 99 c3 ff
>a5b8	81 99 f3 e7 e7 e7 e7 ff c3 99 99 c3 99 99 c3 ff
>a5c8	c3 99 99 c1 f9 99 c3 ff ff ff e7 ff ff e7 ff ff
>a5d8	ff ff e7 ff ff e7 e7 cf f1 e7 cf 9f cf e7 f1 ff
>a5e8	ff ff 81 ff 81 ff ff ff 8f e7 f3 f9 f3 e7 8f ff
>a5f8	c3 99 f9 f3 e7 ff e7 ff ff ff ff 00 00 ff ff ff
>a608	f7 e3 c1 80 80 e3 c1 ff e7 e7 e7 e7 e7 e7 e7 e7
>a618	ff ff ff 00 00 ff ff ff ff ff 00 00 ff ff ff ff
>a628	ff 00 00 ff ff ff ff ff ff ff ff ff 00 00 ff ff
>a638	cf cf cf cf cf cf cf cf f3 f3 f3 f3 f3 f3 f3 f3
>a648	ff ff ff 1f 0f c7 e7 e7 e7 e7 e3 f0 f8 ff ff ff
>a658	e7 e7 c7 0f 1f ff ff ff 3f 3f 3f 3f 3f 3f 00 00
>a668	3f 1f 8f c7 e3 f1 f8 fc fc f8 f1 e3 c7 8f 1f 3f
>a678	00 00 3f 3f 3f 3f 3f 3f 00 00 fc fc fc fc fc fc
>a688	ff c3 81 81 81 81 c3 ff ff ff ff ff ff 00 00 ff
>a698	c9 80 80 80 c1 e3 f7 ff 9f 9f 9f 9f 9f 9f 9f 9f
>a6a8	ff ff ff f8 f0 e3 e7 e7 3c 18 81 c3 c3 81 18 3c
>a6b8	ff c3 81 99 99 81 c3 ff e7 e7 99 99 e7 e7 c3 ff
>a6c8	f9 f9 f9 f9 f9 f9 f9 f9 f7 e3 c1 80 c1 e3 f7 ff
>a6d8	e7 e7 e7 00 00 e7 e7 e7 3f 3f cf cf 3f 3f cf cf
>a6e8	e7 e7 e7 e7 e7 e7 e7 e7 ff ff fc c1 89 c9 c9 ff
>a6f8	00 80 c0 e0 f0 f8 fc fe ff ff ff ff ff ff ff ff
>a708	0f 0f 0f 0f 0f 0f 0f 0f ff ff ff ff 00 00 00 00
>a718	00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00
>a728	3f 3f 3f 3f 3f 3f 3f 3f 33 33 cc cc 33 33 cc cc
>a738	fc fc fc fc fc fc fc fc ff ff ff ff 33 33 cc cc
>a748	00 01 03 07 0f 1f 3f 7f fc fc fc fc fc fc fc fc
>a758	e7 e7 e7 e0 e0 e7 e7 e7 ff ff ff ff f0 f0 f0 f0
>a768	e7 e7 e7 e0 e0 ff ff ff ff ff ff 07 07 e7 e7 e7
>a778	ff ff ff ff ff ff 00 00 ff ff ff e0 e0 e7 e7 e7
>a788	e7 e7 e7 00 00 ff ff ff ff ff ff 00 00 e7 e7 e7
>a798	e7 e7 e7 07 07 e7 e7 e7 3f 3f 3f 3f 3f 3f 3f 3f
>a7a8	1f 1f 1f 1f 1f 1f 1f 1f f8 f8 f8 f8 f8 f8 f8 f8
>a7b8	00 00 ff ff ff ff ff ff 00 00 00 ff ff ff ff ff
>a7c8	ff ff ff ff ff 00 00 00 fc fc fc fc fc fc 00 00
>a7d8	ff ff ff ff 0f 0f 0f 0f f0 f0 f0 f0 ff ff ff ff
>a7e8	e7 e7 e7 07 07 ff ff ff 0f 0f 0f 0f ff ff ff ff
>a7f8	0f 0f 0f 0f f0 f0 f0 f0 3c 66 6e 6e 60 62 3c 00
>a808	00 00 3c 06 3e 66 3e 00 00 60 60 7c 66 66 7c 00
>a818	00 00 3c 60 60 60 3c 00 00 06 06 3e 66 66 3e 00
>a828	00 00 3c 66 7e 60 3c 00 00 0e 18 3e 18 18 18 00
>a838	00 00 3e 66 66 3e 06 7c 00 60 60 7c 66 66 66 00
>a848	00 18 00 38 18 18 3c 00 00 06 00 06 06 06 06 3c
>a858	00 60 60 6c 78 6c 66 00 00 38 18 18 18 18 3c 00
>a868	00 00 66 7f 7f 6b 63 00 00 00 7c 66 66 66 66 00
>a878	00 00 3c 66 66 66 3c 00 00 00 7c 66 66 7c 60 60
>a888	00 00 3e 66 66 3e 06 06 00 00 7c 66 60 60 60 00
>a898	00 00 3e 60 3c 06 7c 00 00 18 7e 18 18 18 0e 00
>a8a8	00 00 66 66 66 66 3e 00 00 00 66 66 66 3c 18 00
>a8b8	00 00 63 6b 7f 3e 36 00 00 00 66 3c 18 3c 66 00
>a8c8	00 00 66 66 66 3e 0c 78 00 00 7e 0c 18 30 7e 00
>a8d8	3c 30 30 30 30 30 3c 00 0c 12 30 7c 30 62 fc 00
>a8e8	3c 0c 0c 0c 0c 0c 3c 00 00 18 3c 7e 18 18 18 18
>a8f8	00 10 30 7f 7f 30 10 00 00 00 00 00 00 00 00 00
>a908	18 18 18 18 00 00 18 00 66 66 66 00 00 00 00 00
>a918	66 66 ff 66 ff 66 66 00 18 3e 60 3c 06 7c 18 00
>a928	62 66 0c 18 30 66 46 00 3c 66 3c 38 67 66 3f 00
>a938	06 0c 18 00 00 00 00 00 0c 18 30 30 30 18 0c 00
>a948	30 18 0c 0c 0c 18 30 00 00 66 3c ff 3c 66 00 00
>a958	00 18 18 7e 18 18 00 00 00 00 00 00 00 18 18 30
>a968	00 00 00 7e 00 00 00 00 00 00 00 00 00 18 18 00
>a978	00 03 06 0c 18 30 60 00 3c 66 6e 76 66 66 3c 00
>a988	18 18 38 18 18 18 7e 00 3c 66 06 0c 30 60 7e 00
>a998	3c 66 06 1c 06 66 3c 00 06 0e 1e 66 7f 06 06 00
>a9a8	7e 60 7c 06 06 66 3c 00 3c 66 60 7c 66 66 3c 00
>a9b8	7e 66 0c 18 18 18 18 00 3c 66 66 3c 66 66 3c 00
>a9c8	3c 66 66 3e 06 66 3c 00 00 00 18 00 00 18 00 00
>a9d8	00 00 18 00 00 18 18 30 0e 18 30 60 30 18 0e 00
>a9e8	00 00 7e 00 7e 00 00 00 70 18 0c 06 0c 18 70 00
>a9f8	3c 66 06 0c 18 00 18 00 00 00 00 ff ff 00 00 00
>aa08	18 3c 66 7e 66 66 66 00 7c 66 66 7c 66 66 7c 00
>aa18	3c 66 60 60 60 66 3c 00 78 6c 66 66 66 6c 78 00
>aa28	7e 60 60 78 60 60 7e 00 7e 60 60 78 60 60 60 00
>aa38	3c 66 60 6e 66 66 3c 00 66 66 66 7e 66 66 66 00
>aa48	3c 18 18 18 18 18 3c 00 1e 0c 0c 0c 0c 6c 38 00
>aa58	66 6c 78 70 78 6c 66 00 60 60 60 60 60 60 7e 00
>aa68	63 77 7f 6b 63 63 63 00 66 76 7e 7e 6e 66 66 00
>aa78	3c 66 66 66 66 66 3c 00 7c 66 66 7c 60 60 60 00
>aa88	3c 66 66 66 66 3c 0e 00 7c 66 66 7c 78 6c 66 00
>aa98	3c 66 60 3c 06 66 3c 00 7e 18 18 18 18 18 18 00
>aaa8	66 66 66 66 66 66 3c 00 66 66 66 66 66 3c 18 00
>aab8	63 63 63 6b 7f 77 63 00 66 66 3c 18 3c 66 66 00
>aac8	66 66 66 3c 18 18 18 00 7e 06 0c 18 30 60 7e 00
>aad8	18 18 18 ff ff 18 18 18 c0 c0 30 30 c0 c0 30 30
>aae8	18 18 18 18 18 18 18 18 33 33 cc cc 33 33 cc cc
>aaf8	33 99 cc 66 33 99 cc 66 00 00 00 00 00 00 00 00
>ab08	f0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00 ff ff ff ff
>ab18	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff
>ab28	c0 c0 c0 c0 c0 c0 c0 c0 cc cc 33 33 cc cc 33 33
>ab38	03 03 03 03 03 03 03 03 00 00 00 00 cc cc 33 33
>ab48	cc 99 33 66 cc 99 33 66 03 03 03 03 03 03 03 03
>ab58	18 18 18 1f 1f 18 18 18 00 00 00 00 0f 0f 0f 0f
>ab68	18 18 18 1f 1f 00 00 00 00 00 00 f8 f8 18 18 18
>ab78	00 00 00 00 00 00 ff ff 00 00 00 1f 1f 18 18 18
>ab88	18 18 18 ff ff 00 00 00 00 00 00 ff ff 18 18 18
>ab98	18 18 18 f8 f8 18 18 18 c0 c0 c0 c0 c0 c0 c0 c0
>aba8	e0 e0 e0 e0 e0 e0 e0 e0 07 07 07 07 07 07 07 07
>abb8	ff ff 00 00 00 00 00 00 ff ff ff 00 00 00 00 00
>abc8	00 00 00 00 00 ff ff ff 01 03 06 6c 78 70 60 00
>abd8	00 00 00 00 f0 f0 f0 f0 0f 0f 0f 0f 00 00 00 00
>abe8	18 18 18 f8 f8 00 00 00 f0 f0 f0 f0 00 00 00 00
>abf8	f0 f0 f0 f0 0f 0f 0f 0f c3 99 91 91 9f 99 c3 ff
>ac08	ff ff c3 f9 c1 99 c1 ff ff 9f 9f 83 99 99 83 ff
>ac18	ff ff c3 9f 9f 9f c3 ff ff f9 f9 c1 99 99 c1 ff
>ac28	ff ff c3 99 81 9f c3 ff ff f1 e7 c1 e7 e7 e7 ff
>ac38	ff ff c1 99 99 c1 f9 83 ff 9f 9f 83 99 99 99 ff
>ac48	ff e7 ff c7 e7 e7 c3 ff ff f9 ff f9 f9 f9 f9 c3
>ac58	ff 9f 9f 93 87 93 99 ff ff c7 e7 e7 e7 e7 c3 ff
>ac68	ff ff 99 80 80 94 9c ff ff ff 83 99 99 99 99 ff
>ac78	ff ff c3 99 99 99 c3 ff ff ff 83 99 99 83 9f 9f
>ac88	ff ff c1 99 99 c1 f9 f9 ff ff 83 99 9f 9f 9f ff
>ac98	ff ff c1 9f c3 f9 83 ff ff e7 81 e7 e7 e7 f1 ff
>aca8	ff ff 99 99 99 99 c1 ff ff ff 99 99 99 c3 e7 ff
>acb8	ff ff 9c 94 80 c1 c9 ff ff ff 99 c3 e7 c3 99 ff
>acc8	ff ff 99 99 99 c1 f3 87 ff ff 81 f3 e7 cf 81 ff
>acd8	c3 cf cf cf cf cf c3 ff f3 ed cf 83 cf 9d 03 ff
>ace8	c3 f3 f3 f3 f3 f3 c3 ff ff e7 c3 81 e7 e7 e7 e7
>acf8	ff ef cf 80 80 cf ef ff ff ff ff ff ff ff ff ff
>ad08	e7 e7 e7 e7 ff ff e7 ff 99 99 99 ff ff ff ff ff
>ad18	99 99 00 99 00 99 99 ff e7 c1 9f c3 f9 83 e7 ff
>ad28	9d 99 f3 e7 cf 99 b9 ff c3 99 c3 c7 98 99 c0 ff
>ad38	f9 f3 e7 ff ff ff ff ff f3 e7 cf cf cf e7 f3 ff
>ad48	cf e7 f3 f3 f3 e7 cf ff ff 99 c3 00 c3 99 ff ff
>ad58	ff e7 e7 81 e7 e7 ff ff ff ff ff ff ff e7 e7 cf
>ad68	ff ff ff 81 ff ff ff ff ff ff ff ff ff e7 e7 ff
>ad78	ff fc f9 f3 e7 cf 9f ff c3 99 91 89 99 99 c3 ff
>ad88	e7 e7 c7 e7 e7 e7 81 ff c3 99 f9 f3 cf 9f 81 ff
>ad98	c3 99 f9 e3 f9 99 c3 ff f9 f1 e1 99 80 f9 f9 ff
>ada8	81 9f 83 f9 f9 99 c3 ff c3 99 9f 83 99 99 c3 ff
>adb8	81 99 f3 e7 e7 e7 e7 ff c3 99 99 c3 99 99 c3 ff
>adc8	c3 99 99 c1 f9 99 c3 ff ff ff e7 ff ff e7 ff ff
>add8	ff ff e7 ff ff e7 e7 cf f1 e7 cf 9f cf e7 f1 ff
>ade8	ff ff 81 ff 81 ff ff ff 8f e7 f3 f9 f3 e7 8f ff
>adf8	c3 99 f9 f3 e7 ff e7 ff ff ff ff 00 00 ff ff ff
>ae08	e7 c3 99 81 99 99 99 ff 83 99 99 83 99 99 83 ff
>ae18	c3 99 9f 9f 9f 99 c3 ff 87 93 99 99 99 93 87 ff
>ae28	81 9f 9f 87 9f 9f 81 ff 81 9f 9f 87 9f 9f 9f ff
>ae38	c3 99 9f 91 99 99 c3 ff 99 99 99 81 99 99 99 ff
>ae48	c3 e7 e7 e7 e7 e7 c3 ff e1 f3 f3 f3 f3 93 c7 ff
>ae58	99 93 87 8f 87 93 99 ff 9f 9f 9f 9f 9f 9f 81 ff
>ae68	9c 88 80 94 9c 9c 9c ff 99 89 81 81 91 99 99 ff
>ae78	c3 99 99 99 99 99 c3 ff 83 99 99 83 9f 9f 9f ff
>ae88	c3 99 99 99 99 c3 f1 ff 83 99 99 83 87 93 99 ff
>ae98	c3 99 9f c3 f9 99 c3 ff 81 e7 e7 e7 e7 e7 e7 ff
>aea8	99 99 99 99 99 99 c3 ff 99 99 99 99 99 c3 e7 ff
>aeb8	9c 9c 9c 94 80 88 9c ff 99 99 c3 e7 c3 99 99 ff
>aec8	99 99 99 c3 e7 e7 e7 ff 81 f9 f3 e7 cf 9f 81 ff
>aed8	e7 e7 e7 00 00 e7 e7 e7 3f 3f cf cf 3f 3f cf cf
>aee8	e7 e7 e7 e7 e7 e7 e7 e7 cc cc 33 33 cc cc 33 33
>aef8	cc 66 33 99 cc 66 33 99 ff ff ff ff ff ff ff ff
>af08	0f 0f 0f 0f 0f 0f 0f 0f ff ff ff ff 00 00 00 00
>af18	00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00
>af28	3f 3f 3f 3f 3f 3f 3f 3f 33 33 cc cc 33 33 cc cc
>af38	fc fc fc fc fc fc fc fc ff ff ff ff 33 33 cc cc
>af48	33 66 cc 99 33 66 cc 99 fc fc fc fc fc fc fc fc
>af58	e7 e7 e7 e0 e0 e7 e7 e7 ff ff ff ff f0 f0 f0 f0
>af68	e7 e7 e7 e0 e0 ff ff ff ff ff ff 07 07 e7 e7 e7
>af78	ff ff ff ff ff ff 00 00 ff ff ff e0 e0 e7 e7 e7
>af88	e7 e7 e7 00 00 ff ff ff ff ff ff 00 00 e7 e7 e7
>af98	e7 e7 e7 07 07 e7 e7 e7 3f 3f 3f 3f 3f 3f 3f 3f
>afa8	1f 1f 1f 1f 1f 1f 1f 1f f8 f8 f8 f8 f8 f8 f8 f8
>afb8	00 00 ff ff ff ff ff ff 00 00 00 ff ff ff ff ff
>afc8	ff ff ff ff ff 00 00 00 fe fc f9 93 87 8f 9f ff
>afd8	ff ff ff ff 0f 0f 0f 0f f0 f0 f0 f0 ff ff ff ff
>afe8	e7 e7 e7 07 07 ff ff ff 0f 0f 0f 0f ff ff ff ff
>aff8	0f 0f 0f 0f f0 f0 f0 f0
.e000					EXTDummyInterrupt:
.e000	40		rti			rti
.e001					EXTStartPersonalise:
.e001	a2 ff		ldx #$ff		ldx 	#$FF 							; reset 6502 stack.
.e003	9a		txs			txs
.e004	20 a2 e0	jsr $e0a2		jsr 	EXTReset 						; reset video
.e007	20 4a e0	jsr $e04a		jsr 	EXTClearScreen 					; clear screen
.e00a	4c 98 e2	jmp $e298		jmp 	Start 							; start main application
.e00d					EXTReadKey:
.e00d	db		phz			phz
.e00e	a9 0f		lda #$0f		lda 	#$0F 							; set up to write to read keyboard.
.e010	85 07		sta $07			sta 	EXTZPWork+3
.e012	a9 fd		lda #$fd		lda 	#$FD
.e014	85 06		sta $06			sta 	EXTZPWork+2
.e016	a9 36		lda #$36		lda 	#$36
.e018	85 05		sta $05			sta 	EXTZPWork+1
.e01a	a9 10		lda #$10		lda 	#$10
.e01c	85 04		sta $04			sta 	EXTZPWork+0
.e01e	a3 00		ldz #$00		ldz 	#0
.e020	ea		nop			nop 									; read keyboard
.e021	b2 04		lda ($04),z		lda 	(EXTZPWork),z
.e023	f0 06		beq $e02b		beq 	_EXTRKExit
.e025	48		pha			pha 									; save key
.e026	6b		tza			tza 									; reset input
.e027	ea		nop			nop
.e028	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e02a	68		pla			pla 									; restore/return value
.e02b					_EXTRKExit:
.e02b	fb		plz			plz
.e02c	60		rts			rts
.e02d					EXTReadScreen:
.e02d	5a		phy			phy 										; save Y
.e02e	8a		txa			txa 										; multiply XY by 2
.e02f	0a		asl a			asl 	a
.e030	85 04		sta $04			sta 	EXTZPWork							; into EXTZPWork
.e032	98		tya			tya
.e033	2a		rol a			rol 	a
.e034	09 10		ora #$10		ora 	#EXTScreen>>8 						; move into screen area
.e036	85 05		sta $05			sta 	EXTZPWork+1 						; read character there
.e038	a0 00		ldy #$00		ldy 	#0
.e03a	b1 04		lda ($04),y		lda 	(EXTZPWork),y
.e03c	7a		ply			ply 										; restore Y and exit.
.e03d	60		rts			rts
.e03e					EXTWriteScreen:
.e03e	5a		phy			phy
.e03f	48		pha			pha
.e040	20 2d e0	jsr $e02d		jsr		EXTReadScreen 						; set up the address into EXTZPWork
.e043	a0 00		ldy #$00		ldy 	#0
.e045	68		pla			pla 										; restore and write.
.e046	91 04		sta ($04),y		sta 	(EXTZPWork),y
.e048	7a		ply			ply
.e049	60		rts			rts
.e04a					EXTClearScreen:
.e04a	48		pha			pha 										; save registers
.e04b	5a		phy			phy
.e04c	a9 00		lda #$00		lda 	#EXTScreen & $FF 					; set up pointer
.e04e	85 04		sta $04			sta 	EXTZPWork
.e050	a9 10		lda #$10		lda 	#EXTScreen >> 8
.e052	85 05		sta $05			sta 	EXTZPWork+1
.e054	a0 00		ldy #$00		ldy 	#0
.e056					_EXTCSLoop:
.e056	a9 20		lda #$20		lda 	#32
.e058	91 04		sta ($04),y		sta 	(EXTZPWork),y
.e05a	c8		iny			iny
.e05b	a9 00		lda #$00		lda 	#0
.e05d	91 04		sta ($04),y		sta 	(EXTZPWork),y
.e05f	c8		iny			iny
.e060	d0 f4		bne $e056		bne 	_EXTCSLoop
.e062	e6 05		inc $05			inc 	EXTZPWork+1 						; next screen page
.e064	a5 05		lda $05			lda 	EXTZPWork+1
.e066	c9 18		cmp #$18		cmp 	#(EXTScreen>>8)+8 					; done 2k ?
.e068	d0 ec		bne $e056		bne 	_EXTCSLoop
.e06a	7a		ply			ply 										; restore
.e06b	68		pla			pla
.e06c	60		rts			rts
.e06d					EXTScrollDisplay:
.e06d	48		pha			pha 										; save registers
.e06e	5a		phy			phy
.e06f	a9 00		lda #$00		lda 	#EXTScreen & $FF 					; set pointer to screen
.e071	85 04		sta $04			sta 	EXTZPWork+0
.e073	a9 10		lda #$10		lda 	#EXTScreen >> 8
.e075	85 05		sta $05			sta 	EXTZPWork+1
.e077					_EXTScroll:
.e077	a0 50		ldy #$50		ldy 	#EXTWidth*2 						; x 2 because of two byte format.
.e079	b1 04		lda ($04),y		lda 	(EXTZPWork),y
.e07b	a0 00		ldy #$00		ldy 	#0
.e07d	91 04		sta ($04),y		sta 	(EXTZPWork),y
.e07f	e6 04		inc $04			inc 	EXTZPWork 							; bump address
.e081	e6 04		inc $04			inc 	EXTZPWork
.e083	d0 02		bne $e087		bne 	_EXTNoCarry
.e085	e6 05		inc $05			inc 	EXTZPWork+1
.e087					_EXTNoCarry:
.e087	a5 04		lda $04			lda 	EXTZPWork 							; done ?
.e089	c9 80		cmp #$80		cmp	 	#(EXTScreen+2*EXTWidth*(EXTHeight-1)) & $FF
.e08b	d0 ea		bne $e077		bne 	_EXTScroll
.e08d	a5 05		lda $05			lda 	EXTZPWork+1
.e08f	c9 17		cmp #$17		cmp	 	#(EXTScreen+2*EXTWidth*(EXTHeight-1)) >> 8
.e091	d0 e4		bne $e077		bne 	_EXTScroll
.e093	a0 00		ldy #$00		ldy 	#0									; clear bottom line.
.e095					_EXTLastLine:
.e095	a9 20		lda #$20		lda 	#32
.e097	91 04		sta ($04),y		sta 	(EXTZPWork),y
.e099	c8		iny			iny
.e09a	c8		iny			iny
.e09b	c0 50		cpy #$50		cpy 	#EXTWidth*2
.e09d	d0 f6		bne $e095		bne 	_EXTLastLine
.e09f	7a		ply			ply 										; restore and exit.
.e0a0	68		pla			pla
.e0a1	60		rts			rts
.e0a2					EXTReset:
.e0a2	48		pha			pha 									; save registers
.e0a3	da		phx			phx
.e0a4	5a		phy			phy
.e0a5	a9 0f		lda #$0f		lda 	#$0F 							; set up to write to video system.
.e0a7	85 07		sta $07			sta 	EXTZPWork+3
.e0a9	a9 fd		lda #$fd		lda 	#$FD
.e0ab	85 06		sta $06			sta 	EXTZPWork+2
.e0ad	a9 30		lda #$30		lda 	#$30
.e0af	85 05		sta $05			sta 	EXTZPWork+1
.e0b1	a9 00		lda #$00		lda 	#$00
.e0b3	85 04		sta $04			sta 	EXTZPWork+0
.e0b5	a3 30		ldz #$30		ldz 	#$30 							; address already set up
.e0b7	a9 40		lda #$40		lda 	#$40
.e0b9	ea		nop			nop
.e0ba	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0bc	a3 20		ldz #$20		ldz 	#$20 							; address already set up
.e0be	a9 00		lda #$00		lda 	#$00
.e0c0	ea		nop			nop
.e0c1	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0c3	a3 21		ldz #$21		ldz 	#$21 							; address already set up
.e0c5	a9 00		lda #$00		lda 	#$00
.e0c7	ea		nop			nop
.e0c8	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0ca	a3 6f		ldz #$6f		ldz 	#$6F 							; address already set up
.e0cc	a9 60		lda #$60		lda 	#$60
.e0ce	ea		nop			nop
.e0cf	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0d1	a3 18		ldz #$18		ldz 	#$18 							; address already set up
.e0d3	a9 42		lda #$42		lda 	#$42
.e0d5	ea		nop			nop
.e0d6	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0d8	a3 11		ldz #$11		ldz 	#$11 							; address already set up
.e0da	a9 1b		lda #$1b		lda 	#$1B
.e0dc	ea		nop			nop
.e0dd	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0df	a3 16		ldz #$16		ldz 	#$16 							; address already set up
.e0e1	a9 c8		lda #$c8		lda 	#$C8
.e0e3	ea		nop			nop
.e0e4	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0e6	a3 54		ldz #$54		ldz 	#$54 							; address already set up
.e0e8	a9 c5		lda #$c5		lda 	#$C5
.e0ea	ea		nop			nop
.e0eb	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0ed	a3 58		ldz #$58		ldz 	#$58 							; address already set up
.e0ef	a9 50		lda #$50		lda 	#80
.e0f1	ea		nop			nop
.e0f2	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0f4	a3 59		ldz #$59		ldz 	#$59 							; address already set up
.e0f6	a9 00		lda #$00		lda 	#0
.e0f8	ea		nop			nop
.e0f9	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e0fb	a3 00		ldz #$00		ldz 	#$00 							; address already set up
.e0fd	a9 ff		lda #$ff		lda 	#$FF
.e0ff	ea		nop			nop
.e100	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e102	a3 01		ldz #$01		ldz 	#$01 							; address already set up
.e104	a9 ff		lda #$ff		lda 	#$FF
.e106	ea		nop			nop
.e107	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e109	a3 30		ldz #$30		ldz 	#$30 							; address already set up
.e10b	a9 04		lda #$04		lda 	#4
.e10d	ea		nop			nop
.e10e	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e110	a3 70		ldz #$70		ldz 	#$70 							; address already set up
.e112	a9 ff		lda #$ff		lda 	#$FF
.e114	ea		nop			nop
.e115	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e117	a9 00		lda #$00		lda 	#$00							; colour RAM at $1F800-1FFFF (2kb)
.e119	85 07		sta $07			sta 	EXTZPWork+3
.e11b	a9 01		lda #$01		lda 	#$01
.e11d	85 06		sta $06			sta 	EXTZPWork+2
.e11f	a9 f8		lda #$f8		lda 	#$F8
.e121	85 05		sta $05			sta 	EXTZPWork+1
.e123	a9 00		lda #$00		lda 	#$00
.e125	85 04		sta $04			sta 	EXTZPWork+0
.e127	a3 00		ldz #$00		ldz 	#0
.e129					_EXTClearColorRam:
.e129	a9 08		lda #$08		lda 	#8 								; fill that with this colour.
.e12b	ea		nop			nop
.e12c	92 04		sta ($04),z		sta 	(EXTZPWork),z
.e12e	3b		dez			dez
.e12f	d0 f8		bne $e129		bne 	_EXTClearColorRam
.e131	e6 05		inc $05			inc 	EXTZPWork+1
.e133	d0 f4		bne $e129		bne 	_EXTClearColorRam
.e135	a2 00		ldx #$00		ldx 	#0 								; copy PET Font into memory.
.e137					_EXTCopyCBMFont:
.e137	bd 00 a0	lda $a000,x		lda 	EXTCBMFont,x
.e13a	9d 00 08	sta $0800,x		sta 	EXTCharSet,x
.e13d	bd 00 a1	lda $a100,x		lda 	EXTCBMFont+$100,x
.e140	9d 00 09	sta $0900,x		sta 	EXTCharSet+$100,x
.e143	bd 00 a2	lda $a200,x		lda 	EXTCBMFont+$200,x
.e146	9d 00 0a	sta $0a00,x		sta 	EXTCharSet+$200,x
.e149	bd 00 a3	lda $a300,x		lda 	EXTCBMFont+$300,x
.e14c	9d 00 0b	sta $0b00,x		sta 	EXTCharSet+$300,x
.e14f	ca		dex			dex
.e150	d0 e5		bne $e137		bne 	_EXTCopyCBMFont
.e152	7a		ply			ply 									; restore and exit.
.e153	fa		plx			plx
.e154	68		pla			pla
.e155	60		rts			rts

;******  Return to file: ptest.asm


;******  Processing file: personality_io.asm

=8					IOCursorX = 8 								; cursor position
=9					IOCursorY = 9
=10					IOLineLo = 10 								; line position.
=11					IOLineHi = 11
.e156					IOInitialise:
.e156	20 4a e0	jsr $e04a			jsr 	EXTClearScreen 				; clear screen.
.e159	48		pha				pha
.e15a	a9 00		lda #$00			lda 	#00 						; home cursor
.e15c	85 08		sta $08				sta 	IOCursorX
.e15e	85 09		sta $09				sta 	IOCursorY
.e160	68		pla				pla
.e161	60		rts				rts
.e162					IOPrintChar:
.e162	48		pha				pha 								; save registers
.e163	da		phx				phx
.e164	5a		phy				phy
.e165	29 7f		and #$7f			and 	#$7F 						; 7 bits only.
.e167	c9 0d		cmp #$0d			cmp 	#13 						; handle CR
.e169	f0 14		beq $e17f			beq 	_IOPCCarriageReturn
.e16b	c9 20		cmp #$20			cmp 	#$20 						; control character
.e16d	90 30		bcc $e19f			bcc 	_IOPControl
.e16f	20 f7 e1	jsr $e1f7			jsr	 	IOGetCursorXY 				; get cursor address in XY.
.e172	29 3f		and #$3f			and 	#$3F 						; 6 bit PETSCII
.e174	20 3e e0	jsr $e03e			jsr 	EXTWriteScreen 				; write character at that position.
.e177	e6 08		inc $08				inc 	IOCursorX 					; increment cursor X
.e179	a5 08		lda $08				lda 	IOCursorX
.e17b	c9 28		cmp #$28			cmp 	#EXTWidth 					; zero if at RHS
.e17d	d0 1c		bne $e19b			bne 	_IOPCExit
.e17f					_IOPCCarriageReturn:
.e17f	a9 00		lda #$00			lda 	#0							; LHS
.e181	85 08		sta $08				sta 	IOCursorX
.e183	e6 09		inc $09				inc 	IOCursorY 					; one down
.e185	a5 09		lda $09				lda 	IOCursorY 					; off the bottom ?
.e187	c9 19		cmp #$19			cmp 	#EXTHeight
.e189	d0 10		bne $e19b			bne 	_IOPCExit
.e18b	c6 09		dec $09				dec 	IOCursorY 					; back up and scroll
.e18d	20 6d e0	jsr $e06d			jsr 	EXTScrollDisplay
.e190	80 09		bra $e19b			bra 	_IOPCExit
.e192					_IOPCClear:
.e192	20 4a e0	jsr $e04a			jsr 	EXTClearScreen
.e195	a9 00		lda #$00			lda 	#0
.e197	85 08		sta $08				sta 	IOCursorX
.e199	85 09		sta $09				sta 	IOCursorY
.e19b					_IOPCExit:
.e19b	7a		ply				ply
.e19c	fa		plx				plx
.e19d	68		pla				pla
.e19e	60		rts				rts
.e19f					_IOPControl:
.e19f	c9 1a		cmp #$1a			cmp 	#"Z"-64						; Ctrl-Z clear
.e1a1	f0 ef		beq $e192			beq 	_IOPCClear
.e1a3	c9 01		cmp #$01			cmp 	#"A"-64 					; Cursor movement.
.e1a5	f0 18		beq $e1bf			beq 	_IOPLeft
.e1a7	c9 04		cmp #$04			cmp 	#"D"-64
.e1a9	f0 1e		beq $e1c9			beq 	_IOPRight
.e1ab	c9 17		cmp #$17			cmp 	#"W"-64
.e1ad	f0 26		beq $e1d5			beq 	_IOPUp
.e1af	c9 13		cmp #$13			cmp 	#"S"-64
.e1b1	f0 2c		beq $e1df			beq 	_IOPDown
.e1b3	c9 08		cmp #$08			cmp 	#8							; Backspace
.e1b5	d0 e4		bne $e19b			bne 	_IOPCExit
.e1b7	20 f7 e1	jsr $e1f7			jsr	 	IOGetCursorXY 				; get cursor address in XY.
.e1ba	a9 20		lda #$20			lda 	#" "
.e1bc	20 3e e0	jsr $e03e			jsr 	EXTWriteScreen 				; write space at that position.
.e1bf					_IOPLeft:
.e1bf	c6 08		dec $08				dec 	IOCursorX
.e1c1	10 d8		bpl $e19b			bpl 	_IOPCExit
.e1c3	a9 27		lda #$27			lda 	#EXTWidth-1
.e1c5	85 08		sta $08				sta 	IOCursorX
.e1c7	80 d2		bra $e19b			bra 	_IOPCExit
.e1c9					_IOPRight:
.e1c9	e6 08		inc $08				inc 	IOCursorX
.e1cb	a5 08		lda $08				lda 	IOCursorX
.e1cd	49 28		eor #$28			eor 	#EXTWidth
.e1cf	d0 ca		bne $e19b			bne 	_IOPCExit
.e1d1	85 08		sta $08				sta 	IOCursorX
.e1d3	80 c6		bra $e19b			bra 	_IOPCExit
.e1d5					_IOPUp:
.e1d5	c6 09		dec $09				dec 	IOCursorY
.e1d7	10 c2		bpl $e19b			bpl 	_IOPCExit
.e1d9	a9 18		lda #$18			lda 	#EXTHeight-1
.e1db	85 09		sta $09				sta 	IOCursorY
.e1dd	80 bc		bra $e19b			bra 	_IOPCExit
.e1df					_IOPDown:
.e1df	e6 09		inc $09				inc 	IOCursorY
.e1e1	a5 09		lda $09				lda 	IOCursorY
.e1e3	49 19		eor #$19			eor 	#EXTHeight
.e1e5	d0 b4		bne $e19b			bne 	_IOPCExit
.e1e7	85 09		sta $09				sta 	IOCursorY
.e1e9	80 b0		bra $e19b			bra 	_IOPCExit
.e1eb					IOUpperCase:
.e1eb	c9 61		cmp #$61			cmp 	#"a"
.e1ed	90 07		bcc $e1f6			bcc 	_IOUCExit
.e1ef	c9 7b		cmp #$7b			cmp 	#"z"+1
.e1f1	b0 03		bcs $e1f6			bcs 	_IOUCExit
.e1f3	38		sec				sec
.e1f4	e9 20		sbc #$20			sbc 	#32
.e1f6					_IOUCExit:
.e1f6	60		rts				rts
.e1f7					IOGetCursorXY:
.e1f7	48		pha				pha
.e1f8	a5 09		lda $09				lda 	IOCursorY 					; multiply IOCursorY x 5
.e1fa	0a		asl a				asl		a
.e1fb	0a		asl a				asl		a 							; x 4, carry clear
.e1fc	65 09		adc $09				adc 	IOCursorY 					; so this will be 0..199 now
.e1fe	aa		tax				tax
.e1ff	8a		txa				txa 								; x 10
.e200	0a		asl a				asl 	a
.e201	aa		tax				tax
.e202	a9 00		lda #$00			lda 	#0
.e204	2a		rol a				rol 	a
.e205	a8		tay				tay
.e206	8a		txa				txa 								; x 20
.e207	0a		asl a				asl 	a
.e208	aa		tax				tax
.e209	98		tya				tya
.e20a	2a		rol a				rol 	a
.e20b	a8		tay				tay
.e20c	8a		txa				txa 								; x 40
.e20d	0a		asl a				asl 	a
.e20e	aa		tax				tax
.e20f	98		tya				tya
.e210	2a		rol a				rol 	a
.e211	a8		tay				tay
.e212	8a		txa				txa 								; add X to that.
.e213	18		clc				clc
.e214	65 08		adc $08				adc 	IOCursorX
.e216	aa		tax				tax
.e217	90 01		bcc $e21a			bcc 	_IOGCXYExit
.e219	c8		iny				iny
.e21a					_IOGCXYExit:
.e21a	68		pla				pla
.e21b	60		rts				rts
.e21c					IOReadLine:
.e21c	48		pha				pha
.e21d	86 0a		stx $0a				stx		IOLineLo
.e21f	84 0b		sty $0b				sty 	IOLineHi
.e221					_IROLLoop:
.e221	20 f7 e1	jsr $e1f7			jsr	 	IOGetCursorXY 				; get cursor address in XY.
.e224	20 2d e0	jsr $e02d			jsr 	EXTReadScreen 				; get character there.
.e227	48		pha				pha
.e228	a9 66		lda #$66			lda 	#102 						; write cursor character there
.e22a	20 3e e0	jsr $e03e			jsr		EXTWriteScreen
.e22d					_IROLWaitKey:
.e22d	20 0d e0	jsr $e00d			jsr 	EXTReadKey
.e230	09 00		ora #$00			ora 	#0
.e232	f0 f9		beq $e22d			beq 	_IROLWaitKey
.e234	20 eb e1	jsr $e1eb			jsr 	IOUpperCase 				; capitalise
.e237	aa		tax				tax 								; save in X
.e238	68		pla				pla 								; restore old
.e239	da		phx				phx 								; save new character.
.e23a	20 f7 e1	jsr $e1f7			jsr	 	IOGetCursorXY 				; get cursor address in XY.
.e23d	20 3e e0	jsr $e03e			jsr 	EXTWriteScreen 				; write out.
.e240	68		pla				pla 								; restore old
.e241	c9 0d		cmp #$0d			cmp 	#13
.e243	f0 05		beq $e24a			beq 	_IROLExit 					; exit if CR
.e245	20 62 e1	jsr $e162			jsr 	IOPrintChar 				; print it.
.e248	80 d7		bra $e221			bra 	_IROLLoop
.e24a					_IROLExit:
.e24a	a9 00		lda #$00			lda 	#0 							; go to start of line.
.e24c	85 08		sta $08				sta 	IOCursorX
.e24e	a0 00		ldy #$00			ldy 	#0 							; position
.e250					_IROLCopy:
.e250	5a		phy				phy 								; save position
.e251	20 f7 e1	jsr $e1f7			jsr 	IOGetCursorXY 				; get cursor position.
.e254	20 2d e0	jsr $e02d			jsr 	EXTReadScreen 				; read screen
.e257	7a		ply				ply 								; get position back
.e258	49 20		eor #$20			eor 	#$20
.e25a	18		clc				clc
.e25b	69 20		adc #$20			adc 	#$20
.e25d	91 0a		sta ($0a),y			sta 	(IOLineLo),y 				; save in buffer.
.e25f	e6 08		inc $08				inc 	IOCursorX 					; cursor right
.e261	c8		iny				iny 								; bump pointer
.e262	c0 28		cpy #$28			cpy 	#EXTWidth 					; not done full line.
.e264	d0 ea		bne $e250			bne 	_IROLCopy
.e266	a9 0d		lda #$0d			lda 	#13 						; carriage return
.e268	20 62 e1	jsr $e162			jsr 	IOPrintChar
.e26b	a0 28		ldy #$28			ldy 	#EXTWidth 					; trim trailing spaces
.e26d					_IROLTrim:
.e26d	88		dey				dey
.e26e	30 06		bmi $e276			bmi 	_IROLFound
.e270	b1 0a		lda ($0a),y			lda 	(IOLineLo),y
.e272	c9 20		cmp #$20			cmp 	#32
.e274	f0 f7		beq $e26d			beq 	_IROLTrim
.e276					_IROLFound:
.e276	c8		iny				iny
.e277	a9 00		lda #$00			lda 	#0 							; make it ASCIIZ
.e279	91 0a		sta ($0a),y			sta 	(IOLineLo),y
.e27b	a6 0a		ldx $0a				ldx 	IOLineLo
.e27d	a4 0b		ldy $0b				ldy 	IOLineHi
.e27f	68		pla				pla
.e280	60		rts				rts
.e281					IOPrintString:
.e281	48		pha				pha
.e282	86 0a		stx $0a				stx 	IOLineLo
.e284	84 0b		sty $0b				sty 	IOLineHi
.e286	a0 00		ldy #$00			ldy 	#0
.e288					_IOPSLoop:
.e288	b1 0a		lda ($0a),y			lda 	(IOLineLo),y
.e28a	f0 06		beq $e292			beq 	_IOPSExit
.e28c	20 62 e1	jsr $e162			jsr 	IOPrintChar
.e28f	c8		iny				iny
.e290	80 f6		bra $e288			bra 	_IOPSLoop
.e292					_IOPSExit
.e292	a6 0a		ldx $0a				ldx 	IOLineLo
.e294	a4 0b		ldy $0b				ldy 	IOLineHi
.e296	68		pla				pla
.e297	60		rts				rts

;******  Return to file: ptest.asm

.e298					Start:
.e298	20 56 e1	jsr $e156		jsr 	IOInitialise
.e29b	a2 ac		ldx #$ac		ldx 	#St1 & 255
.e29d	a0 e2		ldy #$e2		ldy 	#St1 >> 8
.e29f	20 81 e2	jsr $e281		jsr 	IOPrintString
.e2a2					Loop:
.e2a2	a2 80		ldx #$80		ldx 	#$80
.e2a4	a0 00		ldy #$00		ldy 	#$00
.e2a6	20 1c e2	jsr $e21c		jsr		IOReadLine
>e2a9	03					.byte 	3
.e2aa	80 f6		bra $e2a2		bra 	Loop
>e2ac	37 31 36 37 20 42 59 54		St1:.text 	"7167 BYTES FREE",0
>e2b4	45 53 20 46 52 45 45 00

;******  End of listing
